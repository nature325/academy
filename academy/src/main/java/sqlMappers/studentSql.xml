<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aca.notice">
	<select id="studentAllList" resultType="aca.student.model.StudentDTO">  <!--  >StudentDAO -->
  		select * from student order by st_idx desc 
  	</select>
	<select id="studentInfo"  resultType="aca.student.model.StudentDTO"> <!-- 한명의 학생 정보출력 -->
		select * from student where st_idx=#{st_idx}
	</select>
	
	<select id="addForm" resultType="String"><!-- 학생추가폼이동하면서 idx마지막값을 구하기 -->
		select max(st_idx) from student
	</select><!-- go StudentDAO -->
	
	<insert id="addStudentInfo" parameterType="aca.student.model.StudentDTO"> <!-- 학원생 추가 -->
		insert into student values(#{st_idx},#{st_pwd},#{st_name},#{st_gen},
		#{st_momtel},#{st_fatel},#{st_hometel},#{st_addr},#{st_school},#{st_level},
		#{st_memo},#{st_status},sysdate,#{st_sms})
	</insert>
	<select id="st_updateForm" resultType="String"><!-- 학원생 수정폼 이동하면서 대상 학생정보 출력 -->
		select st_idx from student where st_idx=#{st_idx}
	</select>
	<insert id="updateStudentInfo" parameterType="aca.student.model.StudentDTO">
		update student set
		 st_pwd=#{st_pwd},st_name=#{st_name}, st_momtel=#{st_momtel},  st_fatel=#{st_fatel},
		  st_hometel=#{st_hometel}, st_addr=#{st_addr}, st_school=#{st_school},  st_level=#{st_level},
		  st_memo=#{st_memo}, st_status=#{st_status}, st_sms=#{st_sms}, st_gen=#{st_gen}
		where st_idx=#{st_idx}   
	</insert>
	

  	<select id="stSelectListByStatus" resultType="aca.student.model.StudentDTO">  
  		select * from student where st_status=#{st_selectKey} order by st_idx desc 
  	</select>
   	<select id="stSelectList" resultType="aca.student.model.StudentDTO">  
  		select * from student where st_status=#{st_selectKey} and st_name like '%'||#{st_name}||'%' order by st_idx desc 
  	</select>

  	
  	
  	<delete id="delStudentInfo" parameterType="int">
  		delete from student where st_idx=#{st_idx}
  	</delete>
  	<select id="st_att" parameterType="String" resultType="HashMap">
		  			select a.*,b.tc_name,c.absence from
	(select c_name,c_code,c_day,c_price,tc_idx from subject where st_idxs like '%'||#{st_idx}||'%')a,
	(select tc_idx,tc_name from teacher)b,
	(select c_code,count(att_divide)as absence from attendance where st_idx=#{st_idx} and att_divide='결석' group by c_code)c
    where a.tc_idx=b.tc_idx and a.c_code=c.c_code(+)
  	</select>
  	  	
  	<!-- sy -->  	  	
  	<select id="st_subAdded" resultType="HashMap">
  		select subject.*, tc_name from subject,teacher 
		where subject.tc_idx=teacher.tc_idx and st_idxs like '%'||#{st_idx}||'%' order by c_code desc
  	</select>
  	
  	<select id="st_subAddChk" parameterType="HashMap" resultType="aca.subject.model.SubjectDTO">
  		select subject.*, tc_name from subject,teacher 
		where subject.tc_idx=teacher.tc_idx and 
		st_idxs like '%'||#{st_idx}||'%' and c_code=#{c_code} order by c_code desc
  	</select>

	<update id="st_subAdd" parameterType="HashMap">
      update subject set st_idxs=st_idxs||#{st_idx}, c_nowp=c_nowp+1 where c_code=#{c_code}
   </update>
	
	<update id="st_subDel" parameterType="HashMap">
		update subject
		set st_idxs=replace(st_idxs,#{st_idx},''),
		c_nowp=(
		case when <![CDATA[c_nowp<=0]]> then 0 else c_nowp-1 end)
		where c_code=#{c_code}
	</update>
  	  	
  	<!-- sb -->
      <select id="st_reci" parameterType="String" resultType="aca.joindto.model.SubReciDTO">
      select subject.c_name, subject.c_price, pay.p_pay, pay.p_paydate, pay.c_code
      from subject, pay
      where pay.p_st_idx = #{st_idx} and p_pay != 0 and pay.c_code = subject.c_code(+)
      group by subject.c_name, subject.c_price, pay.p_pay, pay.p_paydate, pay.c_code
      </select>
      <insert id="st_subAddreciIn" parameterType="HashMap">
         insert into pay values(p_idx_seq.nextval,'','',0,'',#{p_st_idx},#{c_code},'')
      </insert>
      <delete id="st_subDelReciDel" parameterType="HashMap">
      	delete from pay where p_st_idx=#{p_st_idx} and c_code=#{c_code} and p_pay = 0
      </delete>
</mapper>
