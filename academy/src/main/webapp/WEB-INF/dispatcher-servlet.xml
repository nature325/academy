<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- configs -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
	<context:component-scan base-package="aca" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 멀티파트 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
	</bean>
	
	<!-- 1. 데이타 소스 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@192.168.1.3:1521:orcl"></property>
		<property name="username" value="java05"></property>
		<property name="password" value="java05"></property>
	</bean>
	<!-- 2. 트렌젝션관리자 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 3. 마이바티스 설정, 리모컨 설정(?) -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/mybatis-config.xml"></property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
	</bean>
	
	
	<!-- controllers -->
	
	
	<!-- services 어노테이션 사용하려면 작성 -->
	<bean id="subjectDAO" class="aca.subject.model.SubjectDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	<bean id="attDAO" class="aca.att.model.AttDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	<bean id="studentDAO" class="aca.student.model.StudentDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
		<bean id="teacherDAO" class="aca.teacher.model.TeacherDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	<bean id="scoreDAO" class="aca.score.model.ScoreDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	<bean id="loginDAO" class="aca.model.LoginDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	<bean id="QnaDao" class="aca.qna.model.QnaDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
		<bean class="aca.recieve.model.RecieveDAOImple" id="recieveDAO">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
		<context:component-scan base-package="aca.notice"></context:component-scan>
	
		<bean id ="noticeDao" class="aca.notice.model.NoticeDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	<bean id="replyDAO" class="aca.reply.model.ReplyDAOImple">
		<constructor-arg>
			<ref bean="sqlSessionTemplate"/>
		</constructor-arg>
	</bean>
	
	
	
	
	<!-- view -->
	<bean id="acaJson" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>
	<!-- <bean id="acaDown" class="yong.view.DownLoadView"></bean> -->
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="1"></property>
	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0"></property>
	</bean>
	
	
</beans>
